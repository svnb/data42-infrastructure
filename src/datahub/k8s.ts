import * as pulumi from "@pulumi/pulumi"
import * as snowflake from "@pulumi/snowflake"
import * as random from "@pulumi/random"
import * as k8s from "@pulumi/kubernetes"

const CHARTS_PATH = "./charts"

interface DatahubK8sArgs {
    namespace: string
}


export class DatahubK8sComponent extends pulumi.ComponentResource {

    namespace: k8s.core.v1.Namespace
    neo4jSecret: k8s.core.v1.Secret
    mysqlSecret: k8s.core.v1.Secret

    constructor(name: string, args: DatahubK8sArgs, opts?: pulumi.ComponentResourceOptions) {
        super("pkg:index:DatahubK8s", name, opts)

        // Kubernetes Resources
        this.namespace = new k8s.core.v1.Namespace("namespace", {
            metadata: {
                name: args.namespace
            }
        }, { parent: this })

        // The datahub chart requires secrets (neo4j, mysql) to be deployed before installing the helm chart.
        const neo4jPassword = new random.RandomPassword("neo4j", { length: 16 })
        this.neo4jSecret = new k8s.core.v1.Secret("neo4j", {
            type: 'Opaque',
            metadata: {
                name: 'neo4j-secrets',
                namespace: this.namespace.metadata.name
            },
            stringData: {
                "neo4j-password": neo4jPassword.result
            }
        }, { parent: this })

        const mysqlPassword = new random.RandomPassword("mysql", { length: 16 })
        this.mysqlSecret = new k8s.core.v1.Secret("mysql", {
            type: 'Opaque',
            metadata: {
                name: 'mysql-secrets',
                namespace: this.namespace.metadata.name
            },
            stringData: {
                "mysql-root-password": mysqlPassword.result
            }
        }, { parent: this })


        this.namespace.metadata.name.apply(v => console.log(v))
        const prerequisitesChart = new k8s.helm.v3.Chart("prerequisites", {
            namespace: this.namespace.metadata.name,
            path: CHARTS_PATH,
            chart: 'datahub-prerequisites',
            values: {
                "datahub-prerequisites": {
                    neo4j: {
                        neo4j: {
                            password: neo4jPassword.result
                        }
                    }
                }
            }
        }, { parent: this, dependsOn: this.mysqlSecret }) // mysql deployment automatically referes this secret

        new k8s.helm.v3.Chart("datahub", {
            namespace: this.namespace.metadata.name,
            path: CHARTS_PATH,
            chart: "datahub"
        }, {
            parent: this,
            dependsOn: prerequisitesChart,
            // Pulumi keeps trying to force replace the secrets generated by the helm chart due to new credentials being generated on plan.
            // ignoring data inside the secrets will stop this, also has no effect on outside parameters
            // https://www.pulumi.com/docs/concepts/options/transformations/
            transformations: [
                args => args.type == "kubernetes:core/v1:Secret" ?
                    {
                        props: args.props,
                        opts: pulumi.mergeOptions(args.opts, { ignoreChanges: ["data"] })
                    }
                    : undefined
            ]
        })

        this.registerOutputs({
            neo4jSecret: this.neo4jSecret,
            mysqlSecret: this.mysqlSecret
        })
    }
}